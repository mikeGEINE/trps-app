# frozen_string_literal: true

require 'spec_helper'
require 'rails_helper'
require 'validate_token'

RSpec.describe ValidateToken do
  valid = 'eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJib29raW5nIiwiZXhwIjoyNjA1MzU3NDI4LCJjYWxsYmFja191cmwiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvand0L2FjcyJ9.J8_EKVuJyaGZb3fqppFLI-J2nXnPd3A2zkl6D1ZjCQzm_PEtvstr9H9DPBYvllXfl56WUKrRo0rxqO7GxvyUlv-kE2b8npCjh5uiaHoo_zeuLjJzuK9Ho1Pn7nfCfBu6XSJrBBfZqJyBywc-t1grVrLSY_bCPBPNLDa5voXG-f3IE5XT74uckAWT2lGWQl3pWdPBlJ5rLOyRTXLaibww9UZe2ZW40iSBID8Tv4s4Xk0gBZq8CETUT3vXWV_3xZ5lYkDAoytJMJ14j5knp_rYJt5MTmBjq7lIlfNnd0kmYXgUbuHJAQETVPwH-7sJG0l-7wy6A4q9TKFKmVjNovh4Gg'
  expired = 'eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJib29raW5nIiwiZXhwIjo2MDUzNTc0MjgsImNhbGxiYWNrX3VybCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9qd3QvYWNzIn0.Ypm_U9mhxO0vGfE-g8Bq9JP8Qn3Q5wMflY3lAtc9-kZvYKqwqvWQZ1MCtgAbEKejaV5toeS_Ur5geUmXsuHN3Qk_u09YxGlCCA7amgL8iFNW8GswXh-beFfF1JcVUVocQtBNhVeHfiLK4jONsVNClhmfPTC1pEMGoQIiZW7kyYKrqCquUJDHhMip_cpoL2L2nF2Is-vTdrhRv2j6p5Qxjix3eCy7ncoK0IYtasLk3u5wGzYWkDUOchjNNjZf6r2Vt25wXRwHanDLbfDASDMcyesn7HD2dU6dzcGCWVCx7iGV5tuLmjBrbF6lqFBAGeE70Wj16XHnJ0Bp9pDJgSn6MA'
  invalid = 'eyJhbGciOiJSUzINiJ9.eyJpc3MiOiJib29raW5nwiZXhwIjoyNjA1MzU3NDI4LCJjYWxsYmFja191cmwiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvand0L2FjcyJ9.J8_EKVuJyaGZb3fqppFLI-J2nXnPd3A2zkl6D1ZjCQzm_PEtvstr9H9DPBYvllXfl56WUKrRo0rxqO7GxvyUlv-kE2b8npCjh5uiaHoo_zeuLjJzuK9Ho1Pn7nfCfBu6XSJrBBfZqJyBywc-t1grVrLSY_bCPBPNLDa5voXG-f3IE5XT74uckAWT2lGWQl3pWdPBlJ5rLOyRTXLaibww9UZe2ZW40iSBID8Tv4s4Xk0gBZq8CETUT3vXWV_3xZ5lYkDAoytJMJ14j5knp_rYJt5MTmBjq7lIlfNnd0kmYXgUbuHJAQETVPwH-7sJG0l-7wy6A4q9TKFKmVjNovh4'
  no_iss = 'eyJhbGciOiJSUzI1NiJ9.eyJleHAiOjI2MDUzNTc0MjgsImNhbGxiYWNrX3VybCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9qd3QvYWNzIn0.bxrC03TYU0FWsno-UwMBba2Em020kxoMzrMBvVOkH-BTCsZjqU49wHK94tKxzFOVa_gRxQLpXWWp_TIOhiIxmmQ00X7AXbxGGC37v4SkWyMxuqOr9tRixMkNOUpR6koivrkCQO0cOHQZvtgqmAJC1n7_Nn3J3iBg4r0umBgbmpqdv76V3RGvf2qkV38bDprf0Zg32DZzO6CoPAKbPHfIXVFDTlDVI0hB6fHg2jSjPYCuHBU05n3F1mqMoJotta9QwTAeIdJJc7C3viSr1-AFPex7XweGHfYHImsEX40-Aot3mSaKjxR9vCvJn12ViDCpdg3ze0Huq4C17NLOhZSGeg'
  wrong_iss = 'eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJib29rIiwiZXhwIjoyNjA1MzU3NDI4LCJjYWxsYmFja191cmwiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvand0L2FjcyJ9.nTlcOAIMkTqI13Wtn5MfoM7pISXXZr18bWERYXb8gQdFy_pyzAodbO0c8gVYBq8R5FpJEKqRx4S3bohoUt7DeBgv4k3d7Izj2kyLWbzosYpIi1Xal5_rGmE0rWBuQbaNkon-i5-4EnFJbWlRbuGqW0zUn3Wvn_L2PIaFUz78DYZi5kKc6fU5k70TXDxWWWQek2N50oOnnvlH9sv2XshJaRFn9AINtvs6_B89-JEtRMe1M-R4grBehFrQyysoDhSkaQdvJR2xgH4oVuUFQ09qZBegUvjveJwWX4xIsrcy6AlYA9ZJE9EAsOIMX0YuueHb6sw8X5WTyOSyirHCMKZIew'

  it 'validates good token' do
    expect(result(valid).success?).to eq true 
  end
  
  it 'does not validate expired token' do
    expect(result(expired).failure).to eq :invalid_token
  end

  it 'does not validate incorrect token' do
    expect(result(invalid).failure).to eq :invalid_token
  end

  it 'does not validate token without iss' do
    expect(result(no_iss).failure).to eq :no_iss
  end

  it 'does not validate token with wrong iss' do
    expect(result(wrong_iss).failure).to eq :public_key_not_found
  end

  def result(token)
    ValidateToken.call token
  end
end

